{
  "resourceType": "Library",
  "id": "BreastCancerScreeningCQM",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "name": "BreastCancerScreeningCQM",
  "title": "Breast Cancer Screening CQM",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  } ]
}